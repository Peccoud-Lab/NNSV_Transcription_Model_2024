rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
genome_lengths <- c(11161, 15894 ,15638 ,15462, 15246 , 15384, 18959, 19114, 15191)
mean_pros = 1/(1-rates)
df <- data.frame(genome_lengths,mean_pros)
df <- df[order(df$mean_pros),]
mod_gn <- lm(mean_pros~genome_lengths, data=df)
performance::check_model(mod_gn, check="linearity")
performance::check_model(mod_gn, check="homogeneity")
performance::check_model(mod_gn, check="qq")
## no apparent violations of assumptions
tidy(mod_gn, conf.int=TRUE, conf.level=0.95)
summary(mod_gn)
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = TRUE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
library(lme4)
library(tidyverse)
library(car)
library(ggplot2)
library(broom)
library(emmeans)
library(ggpubr)
library(caret)
library(knitr)
library(glue)
library(ggplot2)
library(ggpmisc)
library(ggrepel)
rates = c()
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV")
j = 1
for (i in viruses) {
file <- glue('File2-Top_100_Fit_Stats_simple_model/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
viruses2 <- c("EBOV", "MV", "RSV")
for (i in viruses2) {
file <- glue('File4-Top_100_Fit_Stats_overlaps/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
genome_lengths <- c(11161, 15894 ,15638 ,15462, 15246 , 15384, 18959, 19114, 15191)
mean_pros = 1/(1-rates)
df <- data.frame(genome_lengths,mean_pros)
df <- df[order(df$mean_pros),]
mod_gn <- lm(mean_pros~genome_lengths, data=df)
performance::check_model(mod_gn, check="linearity")
performance::check_model(mod_gn, check="homogeneity")
performance::check_model(mod_gn, check="qq")
## no apparent violations of assumptions
tidy(mod_gn, conf.int=TRUE, conf.level=0.95)
summary(mod_gn)
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = TRUE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
library(lme4)
library(tidyverse)
library(car)
library(ggplot2)
library(broom)
library(emmeans)
library(ggpubr)
library(caret)
library(knitr)
library(glue)
library(ggplot2)
library(ggpmisc)
library(ggrepel)
rates = c()
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV")
j = 1
for (i in viruses) {
file <- glue('File2-Top_100_Fit_Stats_simple_model/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
viruses2 <- c("EBOV", "MV", "RSV")
for (i in viruses2) {
file <- glue('File4-Top_100_Fit_Stats_overlaps/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV", "RSV")
rates = c()
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV", "RSV")
j = 1
for (i in viruses) {
file <- glue('File2-Top_100_Fit_Stats_simple_model/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
#viruses2 <- c("EBOV", "MV", "RSV")
#for (i in viruses2) {
#  file <- glue('File4-Top_100_Fit_Stats_overlaps/{i}_fits.csv')
# df <- read.csv(file )
# rates[j] <- df$Best.Fit.Estimate
#  j = j + 1 }
genome_lengths <- c(11161, 15894 ,15638 ,15462, 15246 , 15384, 18959, 19114, 15191)
mean_pros = 1/(1-rates)
df <- data.frame(genome_lengths,mean_pros)
df <- df[order(df$mean_pros),]
mod_gn <- lm(mean_pros~genome_lengths, data=df)
performance::check_model(mod_gn, check="linearity")
performance::check_model(mod_gn, check="homogeneity")
performance::check_model(mod_gn, check="qq")
## no apparent violations of assumptions
tidy(mod_gn, conf.int=TRUE, conf.level=0.95)
summary(mod_gn)
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = TRUE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
library(lme4)
library(tidyverse)
library(car)
library(ggplot2)
library(broom)
library(emmeans)
library(ggpubr)
library(caret)
library(knitr)
library(glue)
library(ggplot2)
library(ggpmisc)
library(ggrepel)
j = j + 1 }
rates = c()
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV")
j = 1
for (i in viruses) {
file <- glue('File2-Top_100_Fit_Stats_simple_model/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
viruses2 <- c("EBOV", "MV", "RSV")
for (i in viruses2) {
file <- glue('File4-Top_100_Fit_Stats_overlaps/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
genome_lengths <- c(11161, 15894 ,15638 ,15462, 15246 , 15384, 18959, 19114, 15191)
mean_pros = 1/(1-rates)
df <- data.frame(genome_lengths,mean_pros)
df <- df[order(df$mean_pros),]
mod_gn <- lm(mean_pros~genome_lengths, data=df)
performance::check_model(mod_gn, check="linearity")
performance::check_model(mod_gn, check="homogeneity")
performance::check_model(mod_gn, check="qq")
## no apparent violations of assumptions
tidy(mod_gn, conf.int=TRUE, conf.level=0.95)
summary(mod_gn)
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = TRUE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
library(lme4)
library(tidyverse)
library(car)
library(ggplot2)
library(broom)
library(emmeans)
library(ggpubr)
library(caret)
library(knitr)
library(glue)
library(ggplot2)
library(ggpmisc)
library(ggrepel)
rates = c()
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV")
j = 1
for (i in viruses) {
file <- glue('File2-Top_100_Fit_Stats_simple_model/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
viruses2 <- c("EBOV", "MV", "RSV")
for (i in viruses2) {
file <- glue('File4-Top_100_Fit_Stats_overlaps/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
genome_lengths <- c(11161, 15894 ,15638 ,15462, 15246 , 15384, 18959, 19114, 15191)
mean_pros = 1/(1-rates)
df <- data.frame(genome_lengths,mean_pros)
df <- df[order(df$mean_pros),]
mod_gn <- lm(mean_pros~genome_lengths, data=df)
performance::check_model(mod_gn, check="linearity")
performance::check_model(mod_gn, check="homogeneity")
performance::check_model(mod_gn, check="qq")
## no apparent violations of assumptions
tidy(mod_gn, conf.int=TRUE, conf.level=0.95)
summary(mod_gn)
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = TRUE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
library(lme4)
library(tidyverse)
library(car)
library(ggplot2)
library(broom)
library(emmeans)
library(ggpubr)
library(caret)
library(knitr)
library(glue)
library(ggplot2)
library(ggpmisc)
library(ggrepel)
rates = c()
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV")
j = 1
for (i in viruses) {
file <- glue('File2-Top_100_Fit_Stats_simple_model/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
viruses2 <- c("EBOV", "MV", "RSV")
for (i in viruses2) {
file <- glue('File4-Top_100_Fit_Stats_overlaps/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
genome_lengths <- c(11161, 15894 ,15638 ,15462, 15246 , 15384, 18959, 19114, 15191)
mean_pros = 1/(1-rates)
df <- data.frame(genome_lengths,mean_pros)
df <- df[order(df$mean_pros),]
mod_gn <- lm(mean_pros~genome_lengths, data=df)
performance::check_model(mod_gn, check="linearity")
performance::check_model(mod_gn, check="homogeneity")
performance::check_model(mod_gn, check="qq")
## no apparent violations of assumptions
tidy(mod_gn, conf.int=TRUE, conf.level=0.95)
summary(mod_gn)
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = TRUE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
mean_pros
library(lme4)
library(tidyverse)
library(car)
library(ggplot2)
library(broom)
library(emmeans)
library(ggpubr)
library(caret)
library(knitr)
library(glue)
library(ggplot2)
library(ggpmisc)
library(ggrepel)
rates = c()
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV","EBOV", "MV", "RSV")
j = 1
for (i in viruses) {
file <- glue('File2-Top_100_Fit_Stats_simple_model/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
genome_lengths <- c(11161, 15894 ,15638 ,15462, 15246 , 15384, 18959, 19114, 15191)
mean_pros = 1/(1-rates)
df <- data.frame(genome_lengths,mean_pros)
df <- df[order(df$mean_pros),]
mod_gn <- lm(mean_pros~genome_lengths, data=df)
performance::check_model(mod_gn, check="linearity")
performance::check_model(mod_gn, check="homogeneity")
performance::check_model(mod_gn, check="qq")
## no apparent violations of assumptions
tidy(mod_gn, conf.int=TRUE, conf.level=0.95)
mean_pros
summary(mod_gn)
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = TRUE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
library(lme4)
library(tidyverse)
library(car)
library(ggplot2)
library(broom)
library(emmeans)
library(ggpubr)
library(caret)
library(knitr)
library(glue)
library(ggplot2)
library(ggpmisc)
library(ggrepel)
rates = c()
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV")
j = 1
for (i in viruses) {
file <- glue('File2-Top_100_Fit_Stats_simple_model/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
viruses2 <- c("EBOV", "MV", "RSV")
for (i in viruses2) {
file <- glue('File4-Top_100_Fit_Stats_overlaps/{i}_fits.csv')
df <- read.csv(file )
rates[j] <- df$Best.Fit.Estimate
j = j + 1 }
genome_lengths <- c(11161, 15894 ,15638 ,15462, 15246 , 15384, 18959, 19114, 15191)
mean_pros = 1/(1-rates)
df <- data.frame(genome_lengths,mean_pros)
df <- df[order(df$mean_pros),]
mod_gn <- lm(mean_pros~genome_lengths, data=df)
performance::check_model(mod_gn, check="linearity")
performance::check_model(mod_gn, check="homogeneity")
performance::check_model(mod_gn, check="qq")
## no apparent violations of assumptions
tidy(mod_gn, conf.int=TRUE, conf.level=0.95)
mean_pros
summary(mod_gn)
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = TRUE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=TRUE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = FALSE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
viruses <- c("VSV", "MeV", "PIV2", "PIV3", "PIV5", "MuV", "EBOV", "MV","RSV")
df <- df[order(rownames(df)),]
g_df <- ggplot(df, aes(x=genome_lengths, y=mean_pros)) +
theme_bw() +
geom_point() +
ylab("Mean Number of Bases per Walk") +
xlab("Genome Length (bases)") +
geom_smooth(method="lm", se=FALSE) +
stat_poly_eq(aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
label.x.npc = "right", label.y.npc = 0.9,
formula = y ~ x, parse = TRUE, size = 6) +
xlim(10000, max(df$genome_lengths) + 1000) +
ylim(0, max(df$mean_pros) + 1500) +
geom_text_repel(aes(label = viruses), size = 4) +  # Annotating each dot
theme(
axis.title.x = element_text(size = 16),  # Axis title size for X
axis.title.y = element_text(size = 16),  # Axis title size for Y
axis.text.x = element_text(size = 16),   # Tick label size for X
axis.text.y = element_text(size = 16)    # Tick label size for Y
)
ggsave("Figures/Fig4/linear_regression.svg", plot = g_df, width = 6, height = 4, device = "svg")
g_df
